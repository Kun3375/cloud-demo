server:
  port: 9001

spring:
  application:
    name: cloud-consumer
  cloud:
    # 目前客户端负载均衡作为接口，不再强依赖 ribbon，可以进行关闭，默认实现 BlockingLoadBalancerClient
    loadbalancer:
      ribbon:
        enabled: false
  sleuth:
    enabled: false
    sampler:
      # 采样率
      probability: 0.5
  zipkin:
    enabled: false
    # 默认使用 web rest 接口上报信息
#    base-url: http://localhost:9411
    # 可以选择 rabbit、kafka 等
    sender:
      type: rabbit
    rabbitmq:
      addresses: localhost:5672
      queue: zipkin


# 配置简化处理
eureka:
  instance:
    # eureka 体系下的实例名称，默认为 <host>:<application.name>:<port>
    instance-id: ${spring.application.name}-${server.port}
  client:
    # eureka-server 地址，可以配置多个 zone，每个 zone 下可以配置多个 eureka-server 地址，逗号分隔
    # 默认注册地址为：defaultZone: http://localhost:8761/eureka/
    # 启用注册中心安全认证的时候地址需要为 http://<username>:<password>@<host>:<port>/<suffix>
    # 通常需要配置上所有的 eureka-server
    service-url:
      defaultZone: http://localhost:8761/eureka/,http://localhost:8762/eureka/

# ribbon 可以针对不同的服务配置不同的负载均衡客户端
# 使用 <serviceName>.<nameSpace>.<key>=<value>，不指定 serviceName 时作为全局配置
# 默认 nameSpace 为 ribbon，具体 key 可选值参考 com.netflix.client.config.CommonClientConfigKey
# 同样可以采用 @RibbonClients / @RibbonClient + @Configuration 配置不同客户端 rule，ping 等具体规则
#CLOUD-PROVIDER:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
#CLOUD-PROVIDER:
#  ribbon:
#    ReadTimeout=2000
